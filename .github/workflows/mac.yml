name: Build macOS

on:
  push:
    paths:	
      - 'mac/**'
      - '.github/workflows/mac.yml'
      - 'versions.conf'
  release:
    types:
      - published

jobs:
  mac_os_build:
    runs-on: macos-10.15
    if: github.repository == 'lutraconsulting/input-sdk'
    env:
      QT_VERSION: 5.14.2
      ARCHES: 'mac'
      CACHE_VERSION: 6

    steps:
      - uses: actions/checkout@v2

      - name: Prepare build cache for branch/tag
        # use a fork of actions/cache@v2 to upload cache even when the build or test failed
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: ${{ github.workspace }}/build
          # The branch or tag ref that triggered the workflow run. For branches this in the format refs/heads/<branch_name>, and for tags it is refs/tags/<tag_name>
          key: cache-v${{ env.CACHE_VERSION }}-${{ env.QT_VERSION }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            cache-v${{ env.CACHE_VERSION }}-${{ env.QT_VERSION }}-${{ github.ref }}-
            cache-v${{ env.CACHE_VERSION }}-${{ env.QT_VERSION }}-refs/heads/master-

      - name: Install Build Dependencies
        run: |
          brew install bison flex automake shtool gtk-doc
          echo "/usr/local/opt/flex/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/bison/bin" >> $GITHUB_PATH

      - name: Cache Qt
        id: cache-qt
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: ${{ github.workspace }}/Qt
          key: ${{ runner.os }}-QtCache-${{ env.QT_VERSION }}-mac

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ env.QT_VERSION }}
          target: desktop
          dir: ${{ github.workspace }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Export config.conf
        run: |
          touch ./mac/config.conf
          echo -e "export QT_VERSION=${{ env.QT_VERSION }}"  >> ./mac/config.conf
          echo -e "export QT_BASE="/opt/Qt/${{ env.QT_BASE }}/clang_64""  >> ./mac/config.conf
          echo -e "export ROOT_OUT_PATH=${{ github.workspace }}/build"  >> ./mac/config.conf
          echo -e "export ARCHES=("\""${{ env.ARCHES }}"\"")"  >> ./mac/config.conf		  
          cat ./mac/config.conf

      - name: Build Sdk
        run: |
          ./mac/distribute.sh -mqgis
 
      - name: Get TimeStamp
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: 'YYYYMMDD'

      - name: Create package
        run: |
          SDK_TAR=input-sdk-qt-${{ env.QT_VERSION }}-mac-${{ steps.time.outputs.time }}-${{ github.run_number }}.tar.gz
          echo "SDK_TAR=${SDK_TAR}" >> $GITHUB_ENV
          cd "${{ github.workspace }}/build/stage/mac"
          tar -c -z -f ${{ github.workspace }}/${SDK_TAR} ./

      - name: Upload Sdk in Artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/${{ env.SDK_TAR }}

      - name: Create Release
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: ncipollo/release-action@v1
        with:
          tag: mac-${{ steps.time.outputs.time }}-${{ github.run_number }}
          allowUpdates: true
          artifacts: ${{ env.SDK_TAR }}
          token: ${{ secrets.GITHUB_TOKEN }}
