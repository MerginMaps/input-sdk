name: Build win64

on:
  push:
    paths:
      - 'vcpkg-test/**'
      - 'vcpkg-overlay/**'
      - '.github/workflows/win.yml'
  release:
    types:
      - published
 
concurrency:
  group: ci-${{github.ref}}-windows
  cancel-in-progress: true
  
jobs:
  win64_build:
    if: ( github.repository == 'MerginMaps/input-sdk' )
    runs-on: windows-2022
    
    env:
      QT_VERSION: 5.14.2
      CACHE_VERSION: 0
      ARCH: "win64"
      TRIPLET: "x64-windows"
      CMAKE_GENERATOR: "Visual Studio 17 2022"
      CMAKE_ARCH: "x64"
      
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
      
      - name: Check deps versions change
        run: |
          CHECKSUM=`md5sum -r 'vcpkg-test/vcpkg.json | cut -d\  -f1`
          echo "DEPS_CHECKSUM=$CHECKSUM" >> $GITHUB_ENV

      - name: Prepare build cache for branch/tag
        # use a fork of actions/cache@v2 to upload cache even when the build or test failed
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: ${{ github.workspace }}/build
          # The branch or tag ref that triggered the workflow run. For branches this in the format refs/heads/<branch_name>, and for tags it is refs/tags/<tag_name>
          key: cache-${{ env.DEPS_CHECKSUM }}-v${{ env.CACHE_VERSION }}-${{ env.QT_VERSION }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            cache-${{ env.DEPS_CHECKSUM }}-v${{ env.CACHE_VERSION }}-${{ env.QT_VERSION }}-${{ github.ref }}-
            cache-${{ env.DEPS_CHECKSUM }}-v${{ env.CACHE_VERSION }}-${{ env.QT_VERSION }}-refs/heads/master-


      - name: Cache Qt
        id: cache-qt
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: ${{ github.workspace }}/Qt
          key: ${{ runner.os }}-QtCache-${{ env.QT_VERSION }}-win64

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ env.QT_VERSION }}
          target: desktop
          dir: ${{ github.workspace }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
        
      - name: Build Sdk
        run: |
          mkdir ${{ github.workspace }}\build\${{ env.ARCH }}
          cmake -B ${{ github.workspace }}\build\${{ env.ARCH }}^
                -S ${{ github.workspace }}\input-sdk\vcpkg-test^
                "-DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_INSTALLATION_ROOT }}\scripts\buildsystems\vcpkg.cmake"^
                -G "${{ env.CMAKE_GENERATOR }}" -A ${{ env.CMAKE_ARCH }}  -DVCPKG_TARGET_TRIPLET=${{ env.TRIPLET }}^
                "-DVCPKG_OVERLAY_TRIPLETS=${{ github.workspace }}\input-sdk\vcpkg-overlay\triplets"^
                "-DVCPKG_OVERLAY_PORTS=${{ github.workspace }}\input-sdk\vcpkg-overlay\ports" 
          
          cmake --build ${{ github.workspace }}\build\${{ env.ARCH }} --config Release --verbose
      
      - name: Run SDK Tests
        run: |
          ${{ github.workspace }}\build\${{ env.ARCH }}\Release\inputsdktest.exe
      
      - name: Get TimeStamp
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: 'YYYYMMDD'

      - name: Create package
        shell: bash
        run: |
          SDK_TAR=input-sdk-qt-${{ env.QT_VERSION }}-win-${{ steps.time.outputs.time }}-${{ github.run_number }}.tar.gz
          echo "SDK_TAR=${SDK_TAR}" >> $GITHUB_ENV
          cd "${{ github.workspace }}/build/${{ env.ARCH }}/vcpkg_installed/${{ env.TRIPLET }}"
          tar -c -z -f ${{ github.workspace }}/${SDK_TAR} ./

      - name: Upload Sdk in Artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/${{ env.SDK_TAR }}
          if-no-files-found: error
          
      - name: Create Release
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: ncipollo/release-action@v1
        with:
          tag: win64-${{ steps.time.outputs.time }}-${{ github.run_number }}
          allowUpdates: true
          artifacts: ${{ env.SDK_TAR }}
          token: ${{ secrets.GITHUB_TOKEN }}
