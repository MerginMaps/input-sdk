name: Build android (on MacOS)

on:
  push:
    paths:
      - 'android/**'
      - '.github/workflows/android.yml'
      - 'versions.conf'

  release:
    types:
      - published

jobs:
  android_build:
    runs-on: macos-10.15
    env:
      QT_VERSION: '5.14.2'
      ANDROIDAPI: 24
      NDK_VERSION: r21
      SDK_PLATFORM: android-30
      SDK_BUILD_TOOLS: 28.0.3
      CACHE_VERSION: 7
      ARCHES: "armeabi-v7a arm64-v8a"

    steps:
      - uses: actions/checkout@v2

      - name: Check deps versions change
        run: |
          CHECKSUM=$( md5 -r versions.conf | cut -d ' ' -f1 )
          echo "DEPS_CHECKSUM=$CHECKSUM" >> $GITHUB_ENV

      - name: Prepare build cache for branch/tag
        # use a fork of actions/cache@v2 to upload cache even when the build or test failed
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: ${{ github.workspace }}/build
          # The branch or tag ref that triggered the workflow run. For branches this in the format refs/heads/<branch_name>, and for tags it is refs/tags/<tag_name>
          key: cache-${{ env.DEPS_CHECKSUM }}-v${{ env.CACHE_VERSION }}-${{ env.QT_VERSION }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            cache-${{ env.DEPS_CHECKSUM }}-v${{ env.CACHE_VERSION }}-${{ env.QT_VERSION }}-${{ github.ref }}-
            cache-${{ env.DEPS_CHECKSUM }}-v${{ env.CACHE_VERSION }}-${{ env.QT_VERSION }}-refs/heads/master-

      - name: Install Build Dependencies
        run: |
          echo "Versions checksum: ${{ env.DEPS_CHECKSUM }}"
          brew install bison flex automake shtool gtk-doc
          echo "/usr/local/opt/flex/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/bison/bin" >> $GITHUB_PATH

      - name: Cache Qt
        id: cache-qt
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: ${{ github.workspace }}/Qt
          key: ${{ runner.os }}-QtCache-v2-${{ env.QT_VERSION }}-android

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ env.QT_VERSION }}
          target: android
          arch: android
          dir: ${{ github.workspace }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

       # Android SDK & NDK
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e
          add-to-path: true

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
         java-version: 1.8

      - name: Setup Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.2

      - name: Install Android Tools
        run: |
          sdkmanager --licenses && sdkmanager --verbose "platforms;${SDK_PLATFORM}" "build-tools;${SDK_BUILD_TOOLS}" tools platform-tools

      # Build SDK
      - name: Export config.conf
        run: |
          touch ./android/config.conf
          echo -e "export QT_VERSION=${{ env.QT_VERSION }}"  >> ./android/config.conf
          echo -e "export ROOT_OUT_PATH=${{ github.workspace }}/build"  >> ./android/config.conf
          echo -e "export ANDROIDSDK=${ANDROID_HOME}"  >> ./android/config.conf
          echo -e "export ANDROIDNDK=${{ steps.setup-ndk.outputs.ndk-path }}"  >> ./android/config.conf
          echo -e "export ANDROIDNDKVER=${{ env.NDK_VERSION }}"  >> ./android/config.conf
          echo -e "export QT_BASE=${{ github.workspace }}/Qt/${{ env.QT_VERSION }}/android"  >> ./android/config.conf
          echo -e "export ANDROIDAPI=${{ env.ANDROIDAPI }}"  >> ./android/config.conf
          echo -e "export ARCHES=("\""${{ env.ARCHES }}"\"")"  >> ./android/config.conf
          cat ./android/config.conf

          echo "NDK: ${{ steps.setup-ndk.outputs.ndk-path }}"
          ls ${{ steps.setup-ndk.outputs.ndk-path }}
          echo "SDK: ${ANDROID_HOME}"

      - name: Build Sdk
        run: |
          ./android/distribute.sh -mqgis

      - name: Get TimeStamp
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: 'YYYYMMDD'

      - name: Create package
        run: |
          SDK_TAR=input-sdk-qt-${{ env.QT_VERSION }}-android-${{ runner.os }}-${{ steps.time.outputs.time }}-${{ github.run_number }}.tar.gz
          echo "SDK_TAR=${SDK_TAR}" >> $GITHUB_ENV
          cd ${{ github.workspace }}/build/stage
          tar -c -z --exclude=*.pyc -f ${{ github.workspace }}/${SDK_TAR} ./

      - name: Upload Sdk in Artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/${{ env.SDK_TAR }}

      - name: Create Release
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: ncipollo/release-action@v1
        with:
          tag: android-${{ runner.os }}-${{ steps.time.outputs.time }}-${{ github.run_number }}
          allowUpdates: true
          artifacts: ${{ env.SDK_TAR }}
          token: ${{ secrets.GITHUB_TOKEN }}
