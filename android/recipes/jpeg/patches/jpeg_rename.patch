--- a/frmts/jpeg/libjpeg/jchuff.h
+++ b/frmts/jpeg/libjpeg/jchuff.h
@@ -40,6 +40,9 @@ typedef struct {
 #ifdef NEED_12_BIT_NAMES
 #define jpeg_make_c_derived_tbl	jpeg_make_c_derived_tbl_12
 #define jpeg_gen_optimal_table	jpeg_gen_optimal_table_12
+#elif defined(RENAME_INTERNAL_LIBJPEG_SYMBOLS)
+#define jpeg_make_c_derived_tbl	gdal_jpeg_make_c_derived_tbl
+#define jpeg_gen_optimal_table	gdal_jpeg_gen_optimal_table
 #endif
 
 /* Expand a Huffman table definition into the derived format *
--- a/frmts/jpeg/libjpeg/jdct.h
+++ b/frmts/jpeg/libjpeg/jdct.h
@@ -8,7 +8,7 @@
  * This include file contains common declarations for the forward and
  * inverse DCT modules.  These declarations are private to the DCT managers
  * (jcdctmgr.c, jddctmgr.c) and the individual DCT algorithms.
- * The individual DCT algorithms are kept in separate files to ease 
+ * The individual DCT algorithms are kept in separate files to ease
  * machine-dependent tuning (e.g., assembly coding).
  */
 
@@ -102,7 +102,17 @@ typedef FAST_FLOAT FLOAT_MULT_TYPE; /* preferred floating type */
 #define jpeg_idct_4x4		jpeg_idct_4x4_12
 #define jpeg_idct_2x2		jpeg_idct_2x2_12
 #define jpeg_idct_1x1		jpeg_idct_1x1_12
-#endif /* NEED_SHORT_EXTERNAL_NAMES */
+#elif defined(RENAME_INTERNAL_LIBJPEG_SYMBOLS)
+#define jpeg_fdct_islow		gdal_jpeg_fdct_islow
+#define jpeg_fdct_ifast	    gdal_jpeg_fdct_ifast
+#define jpeg_fdct_float		gdal_jpeg_fdct_float
+#define jpeg_idct_islow		gdal_jpeg_idct_islow
+#define jpeg_idct_ifast		gdal_jpeg_idct_ifast
+#define jpeg_idct_float	    gdal_jpeg_idct_float
+#define jpeg_idct_4x4		gdal_jpeg_idct_4x4
+#define jpeg_idct_2x2		gdal_jpeg_idct_2x2
+#define jpeg_idct_1x1		gdal_jpeg_idct_1x1
+#endif
 
 /* Extern declarations for the forward and inverse DCT routines. */
 
--- a/frmts/jpeg/libjpeg/jdhuff.h
+++ b/frmts/jpeg/libjpeg/jdhuff.h
@@ -18,12 +18,16 @@
 #define jpeg_huff_decode	jHufDecode
 #endif /* NEED_SHORT_EXTERNAL_NAMES */
 
-#ifdef NEED_12_BIT_NAMES
-#define jpeg_make_d_derived_tbl	jpeg_make_d_derived_tbl_12	
-#define jpeg_fill_bit_buffer	jpeg_fill_bit_buffer_12	
-#define jpeg_huff_decode	jpeg_huff_decode_12	
-#endif /* NEED_SHORT_EXTERNAL_NAMES */
 
+#ifdef NEED_12_BIT_NAMES
+#define jpeg_make_d_derived_tbl	jpeg_make_d_derived_tbl_12
+#define jpeg_fill_bit_buffer	jpeg_fill_bit_buffer_12
+#define jpeg_huff_decode	jpeg_huff_decode_12
+#elif defined(RENAME_INTERNAL_LIBJPEG_SYMBOLS)
+#define jpeg_make_d_derived_tbl	gdal_jpeg_make_d_derived_tbl
+#define jpeg_fill_bit_buffer	gdal_jpeg_fill_bit_buffer
+#define jpeg_huff_decode	gdal_jpeg_huff_decode
+#endif
 
 /* Derived data constructed for each Huffman table */

--- a/frmts/jpeg/libjpeg/jmemsys.h
+++ b/frmts/jpeg/libjpeg/jmemsys.h
@@ -41,7 +41,16 @@
 #define jpeg_open_backing_store	jpeg_open_backing_store_12
 #define jpeg_mem_init		jpeg_mem_init_12
 #define jpeg_mem_term		jpeg_mem_term_12
-#endif /* NEED_SHORT_EXTERNAL_NAMES */
+#elif defined(RENAME_INTERNAL_LIBJPEG_SYMBOLS)
+#define jpeg_get_small		gdal_jpeg_get_small
+#define jpeg_free_small		gdal_jpeg_free_small
+#define jpeg_get_large		gdal_jpeg_get_large
+#define jpeg_free_large		gdal_jpeg_free_large
+#define jpeg_mem_available	gdal_jpeg_mem_available
+#define jpeg_open_backing_store	gdal_jpeg_open_backing_store
+#define jpeg_mem_init		gdal_jpeg_mem_init
+#define jpeg_mem_term		gdal_jpeg_mem_term
+#endif
 
 
 /*
--- a/frmts/jpeg/libjpeg/jpegint.h
+++ b/frmts/jpeg/libjpeg/jpegint.h
@@ -342,39 +342,73 @@ struct jpeg_color_quantizer {
 #endif /* NEED_SHORT_EXTERNAL_NAMES */
 
 #ifdef NEED_12_BIT_NAMES
-#define jinit_compress_master	jinit_compress_master_12	
-#define jinit_c_master_control	jinit_c_master_control_12	
-#define jinit_c_main_controller	jinit_c_main_controller_12	
-#define jinit_c_prep_controller	jinit_c_prep_controller_12	
-#define jinit_c_coef_controller	jinit_c_coef_controller_12	
-#define jinit_color_converter	jinit_color_converter_12	
-#define jinit_downsampler	jinit_downsampler_12	
-#define jinit_forward_dct	jinit_forward_dct_12	
-#define jinit_huff_encoder	jinit_huff_encoder_12	
-#define jinit_phuff_encoder	jinit_phuff_encoder_12	
-#define jinit_marker_writer	jinit_marker_writer_12	
-#define jinit_master_decompress	jinit_master_decompress_12	
-#define jinit_d_main_controller	jinit_d_main_controller_12	
-#define jinit_d_coef_controller	jinit_d_coef_controller_12	
-#define jinit_d_post_controller	jinit_d_post_controller_12	
-#define jinit_input_controller	jinit_input_controller_12	
-#define jinit_marker_reader	jinit_marker_reader_12	
-#define jinit_huff_decoder	jinit_huff_decoder_12	
-#define jinit_phuff_decoder	jinit_phuff_decoder_12	
-#define jinit_inverse_dct	jinit_inverse_dct_12	
-#define jinit_upsampler		jinit_upsampler_12		
-#define jinit_color_deconverter	jinit_color_deconverter_12	
-#define jinit_1pass_quantizer	jinit_1pass_quantizer_12	
-#define jinit_2pass_quantizer	jinit_2pass_quantizer_12	
-#define jinit_merged_upsampler	jinit_merged_upsampler_12	
-#define jinit_memory_mgr	jinit_memory_mgr_12	
-#define jdiv_round_up		jdiv_round_up_12		
-#define jround_up		jround_up_12		
-#define jcopy_sample_rows	jcopy_sample_rows_12	
-#define jcopy_block_row		jcopy_block_row_12		
-#define jzero_far		jzero_far_12		
-#define jpeg_zigzag_order	jpeg_zigzag_order_12	
-#define jpeg_natural_order	jpeg_natural_order_12	
+#define jinit_compress_master	jinit_compress_master_12
+#define jinit_c_master_control	jinit_c_master_control_12
+#define jinit_c_main_controller	jinit_c_main_controller_12
+#define jinit_c_prep_controller	jinit_c_prep_controller_12
+#define jinit_c_coef_controller	jinit_c_coef_controller_12
+#define jinit_color_converter	jinit_color_converter_12
+#define jinit_downsampler	jinit_downsampler_12
+#define jinit_forward_dct	jinit_forward_dct_12
+#define jinit_huff_encoder	jinit_huff_encoder_12
+#define jinit_phuff_encoder	jinit_phuff_encoder_12
+#define jinit_marker_writer	jinit_marker_writer_12
+#define jinit_master_decompress	jinit_master_decompress_12
+#define jinit_d_main_controller	jinit_d_main_controller_12
+#define jinit_d_coef_controller	jinit_d_coef_controller_12
+#define jinit_d_post_controller	jinit_d_post_controller_12
+#define jinit_input_controller	jinit_input_controller_12
+#define jinit_marker_reader	jinit_marker_reader_12
+#define jinit_huff_decoder	jinit_huff_decoder_12
+#define jinit_phuff_decoder	jinit_phuff_decoder_12
+#define jinit_inverse_dct	jinit_inverse_dct_12
+#define jinit_upsampler		jinit_upsampler_12
+#define jinit_color_deconverter	jinit_color_deconverter_12
+#define jinit_1pass_quantizer	jinit_1pass_quantizer_12
+#define jinit_2pass_quantizer	jinit_2pass_quantizer_12
+#define jinit_merged_upsampler	jinit_merged_upsampler_12
+#define jinit_memory_mgr	jinit_memory_mgr_12
+#define jdiv_round_up		jdiv_round_up_12
+#define jround_up		jround_up_12
+#define jcopy_sample_rows	jcopy_sample_rows_12
+#define jcopy_block_row		jcopy_block_row_12
+#define jzero_far		jzero_far_12
+#define jpeg_zigzag_order	jpeg_zigzag_order_12
+#define jpeg_natural_order	jpeg_natural_order_12
+#elif defined(RENAME_INTERNAL_LIBJPEG_SYMBOLS)
+#define jinit_compress_master	gdal_jinit_compress_master
+#define jinit_c_master_control	gdal_jinit_c_master_control
+#define jinit_c_main_controller	gdal_jinit_c_main_controller
+#define jinit_c_prep_controller	gdal_jinit_c_prep_controller
+#define jinit_c_coef_controller	gdal_jinit_c_coef_controller
+#define jinit_color_converter	gdal_jinit_color_converter
+#define jinit_downsampler	gdal_jinit_downsampler
+#define jinit_forward_dct	gdal_jinit_forward_dct
+#define jinit_huff_encoder	gdal_jinit_huff_encoder
+#define jinit_phuff_encoder	gdal_jinit_phuff_encoder
+#define jinit_marker_writer	gdal_jinit_marker_writer
+#define jinit_master_decompress	gdal_jinit_master_decompress
+#define jinit_d_main_controller	gdal_jinit_d_main_controller
+#define jinit_d_coef_controller	gdal_jinit_d_coef_controller
+#define jinit_d_post_controller	gdal_jinit_d_post_controller
+#define jinit_input_controller	gdal_jinit_input_controller
+#define jinit_marker_reader	gdal_jinit_marker_reader
+#define jinit_huff_decoder	gdal_jinit_huff_decoder
+#define jinit_phuff_decoder	gdal_jinit_phuff_decoder
+#define jinit_inverse_dct	gdal_jinit_inverse_dct
+#define jinit_upsampler		gdal_jinit_upsampler
+#define jinit_color_deconverter	gdal_jinit_color_deconverter
+#define jinit_1pass_quantizer	gdal_jinit_1pass_quantizer
+#define jinit_2pass_quantizer	gdal_jinit_2pass_quantizer
+#define jinit_merged_upsampler	gdal_jinit_merged_upsampler
+#define jinit_memory_mgr	gdal_jinit_memory_mgr
+#define jdiv_round_up		gdal_jdiv_round_up
+#define jround_up		gdal_jround_up
+#define jcopy_sample_rows	gdal_jcopy_sample_rows
+#define jcopy_block_row		gdal_jcopy_block_row
+#define jzero_far		gdal_jzero_far
+#define jpeg_zigzag_order	gdal_jpeg_zigzag_order
+#define jpeg_natural_order	gdal_jpeg_natural_order
 #endif
 
 

--- a/frmts/jpeg/libjpeg/jpeglib.h
+++ b/frmts/jpeg/libjpeg/jpeglib.h
@@ -128,9 +128,9 @@ typedef struct {
   /* The decompressor output side may not use these variables. */
   int dc_tbl_no;		/* DC entropy table selector (0..3) */
   int ac_tbl_no;		/* AC entropy table selector (0..3) */
-  
+
   /* Remaining fields should be treated as private by applications. */
-  
+
   /* These values are computed during compression or decompression startup: */
   /* Component's size in DCT blocks.
    * Any dummy blocks added to complete an MCU are not counted; therefore
@@ -298,14 +298,14 @@ struct jpeg_compress_struct {
 
   jpeg_component_info * comp_info;
   /* comp_info[i] describes component that appears i'th in SOF */
-  
+
   JQUANT_TBL * quant_tbl_ptrs[NUM_QUANT_TBLS];
   /* ptrs to coefficient quantization tables, or NULL if not defined */
-  
+
   JHUFF_TBL * dc_huff_tbl_ptrs[NUM_HUFF_TBLS];
   JHUFF_TBL * ac_huff_tbl_ptrs[NUM_HUFF_TBLS];
   /* ptrs to Huffman coding tables, or NULL if not defined */
-  
+
   UINT8 arith_dc_L[NUM_ARITH_TBLS]; /* L values for DC arith-coding tables */
   UINT8 arith_dc_U[NUM_ARITH_TBLS]; /* U values for DC arith-coding tables */
   UINT8 arith_ac_K[NUM_ARITH_TBLS]; /* Kx values for AC arith-coding tables */
@@ -345,7 +345,7 @@ struct jpeg_compress_struct {
   UINT16 X_density;		/* Horizontal pixel density */
   UINT16 Y_density;		/* Vertical pixel density */
   boolean write_Adobe_marker;	/* should an Adobe marker be written? */
-  
+
   /* State variable: index of next scanline to be written to
    * jpeg_write_scanlines().  Application may use this to control its
    * processing loop, e.g., "while (next_scanline < image_height)".
@@ -370,7 +370,7 @@ struct jpeg_compress_struct {
    * There are v_samp_factor * DCTSIZE sample rows of each component in an
    * "iMCU" (interleaved MCU) row.
    */
-  
+
   /*
    * These fields are valid during any one scan.
    * They describe the components and MCUs actually appearing in the scan.
@@ -378,10 +378,10 @@ struct jpeg_compress_struct {
   int comps_in_scan;		/* # of JPEG components in this scan */
   jpeg_component_info * cur_comp_info[MAX_COMPS_IN_SCAN];
   /* *cur_comp_info[i] describes component that appears i'th in SOS */
-  
+
   JDIMENSION MCUs_per_row;	/* # of MCUs across the image */
   JDIMENSION MCU_rows_in_scan;	/* # of MCU rows in the image */
-  
+
   int blocks_in_MCU;		/* # of DCT blocks per MCU */
   int MCU_membership[C_MAX_BLOCKS_IN_MCU];
   /* MCU_membership[i] is index in cur_comp_info of component owning */
@@ -659,7 +659,7 @@ struct jpeg_error_mgr {
 #define JMSG_LENGTH_MAX  200	/* recommended size of format_message buffer */
   /* Reset error state variables at start of a new image */
   JMETHOD(void, reset_error_mgr, (j_common_ptr cinfo));
-  
+
   /* The message ID code and any parameters are saved here.
    * A message can have one string parameter or up to 8 int parameters.
    */
@@ -669,11 +669,11 @@ struct jpeg_error_mgr {
     int i[8];
     char s[JMSG_STR_PARM_MAX];
   } msg_parm;
-  
+
   /* Standard state variables for error facility */
-  
+
   int trace_level;		/* max msg_level that will be displayed */
-  
+
   /* For recoverable corrupt-data errors, we emit a warning message,
    * but keep going unless emit_message chooses to abort.  emit_message
    * should count warnings in num_warnings.  The surrounding application
@@ -831,7 +831,7 @@ typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
 /* Short forms of external names for systems with brain-damaged linkers.
  * We shorten external names to be unique in the first six letters, which
  * is good enough for all known systems.
- * (If your compiler itself needs names to be unique in less than 15 
+ * (If your compiler itself needs names to be unique in less than 15
  * characters, you are out of luck.  Get a better compiler.)
  */
 
@@ -938,7 +938,56 @@ typedef JMETHOD(boolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));
 #define jpeg_abort		jpeg_abort_12
 #define jpeg_destroy		jpeg_destroy_12
 #define jpeg_resync_to_restart	jpeg_resync_to_restart_12
-#endif /* NEED_SHORT_EXTERNAL_NAMES */
+#elif defined(RENAME_INTERNAL_LIBJPEG_SYMBOLS)
+#define jpeg_std_error		gdal_jpeg_std_error
+#define jpeg_CreateCompress	gdal_jpeg_CreateCompress
+#define jpeg_CreateDecompress	gdal_jpeg_CreateDecompress
+#define jpeg_destroy_compress	gdal_jpeg_destroy_compress
+#define jpeg_destroy_decompress	gdal_jpeg_destroy_decompress
+#define jpeg_stdio_dest		gdal_jpeg_stdio_dest
+#define jpeg_stdio_src		gdal_jpeg_stdio_src
+#define jpeg_set_defaults	gdal_jpeg_set_defaults
+#define jpeg_set_colorspace	gdal_jpeg_set_colorspace
+#define jpeg_default_colorspace	gdal_jpeg_default_colorspace
+#define jpeg_set_quality	gdal_jpeg_set_quality
+#define jpeg_set_linear_quality	gdal_jpeg_set_linear_quality
+#define jpeg_add_quant_table	gdal_jpeg_add_quant_table
+#define jpeg_quality_scaling	gdal_jpeg_quality_scaling
+#define jpeg_simple_progression	gdal_jpeg_simple_progression
+#define jpeg_suppress_tables	gdal_jpeg_suppress_tables
+#define jpeg_alloc_quant_table	gdal_jpeg_alloc_quant_table
+#define jpeg_alloc_huff_table	gdal_jpeg_alloc_huff_table
+#define jpeg_start_compress	gdal_jpeg_start_compress
+#define jpeg_write_scanlines	gdal_jpeg_write_scanlines
+#define jpeg_finish_compress	gdal_jpeg_finish_compress
+#define jpeg_write_raw_data	gdal_jpeg_write_raw_data
+#define jpeg_write_marker	gdal_jpeg_write_marker
+#define jpeg_write_m_header	gdal_jpeg_write_m_header
+#define jpeg_write_m_byte	gdal_jpeg_write_m_byte
+#define jpeg_write_tables	gdal_jpeg_write_tables
+#define jpeg_read_header	gdal_jpeg_read_header
+#define jpeg_start_decompress	gdal_jpeg_start_decompress
+#define jpeg_read_scanlines	gdal_jpeg_read_scanlines
+#define jpeg_finish_decompress	gdal_jpeg_finish_decompress
+#define jpeg_read_raw_data	gdal_jpeg_read_raw_data
+#define jpeg_has_multiple_scans	gdal_jpeg_has_multiple_scans
+#define jpeg_start_output	gdal_jpeg_start_output
+#define jpeg_finish_output	gdal_jpeg_finish_output
+#define jpeg_input_complete	gdal_jpeg_input_complete
+#define jpeg_new_colormap	gdal_jpeg_new_colormap
+#define jpeg_consume_input	gdal_jpeg_consume_input
+#define jpeg_calc_output_dimensions	gdal_jpeg_calc_output_dimensions
+#define jpeg_save_markers	gdal_jpeg_save_markers
+#define jpeg_set_marker_processor	gdal_jpeg_set_marker_processor
+#define jpeg_read_coefficients	gdal_jpeg_read_coefficients
+#define jpeg_write_coefficients	gdal_jpeg_write_coefficients
+#define jpeg_copy_critical_parameters	gdal_jpeg_copy_critical_parameters
+#define jpeg_abort_compress	gdal_jpeg_abort_compress
+#define jpeg_abort_decompress	gdal_jpeg_abort_decompress
+#define jpeg_abort		gdal_jpeg_abort
+#define jpeg_destroy		gdal_jpeg_destroy
+#define jpeg_resync_to_restart	gdal_jpeg_resync_to_restart
+#endif
