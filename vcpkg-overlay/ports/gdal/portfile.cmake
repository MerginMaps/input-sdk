vcpkg_from_github(
    OUT_SOURCE_PATH SOURCE_PATH
    REPO OSGeo/gdal
    REF 2a589654af44263b3eff6ffa4927e9bd93115a64 # to be 3.5.2
    SHA512 dd033dff38dac408831e652a39f5667c9ee7f8e8b46b27c9adca39ee4801324dd782edebef56c6227e7daf42485d667c828d6a58d83877ff428e2c162dc45e1e
    HEAD_REF master
    PATCHES
        find-link-libraries.patch
)
# `vcpkg clean` stumbles over one subdir
file(REMOVE_RECURSE "${SOURCE_PATH}/autotest")

list(APPEND FEATURE_OPTIONS -DGDAL_USE_ICONV=ON)
list(APPEND FEATURE_OPTIONS -D_ICONV_SECOND_ARGUMENT_IS_NOT_CONST=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_TIFF=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_CURL=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_WEBP=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_SQLITE3=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_GEOS=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_PNG=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_JPEG=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_GEOTIFF=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_SPATIALITE=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_EXPAT=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_ZLIB=ON)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_JSONC=ON)

list(APPEND FEATURE_OPTIONS -DGDAL_USE_POSTGRESQL=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_PCRE2=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_ZSTD=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_LIBXML2=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_GIF=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_OPENJPEG=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_ODBC=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_CFITSIO=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_HDF5=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_MYSQL=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_POPPLER=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_ODBC=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_MSSQL_ODBC=OFF)
list(APPEND FEATURE_OPTIONS -DGDAL_USE_FREEXL=OFF)

vcpkg_cmake_configure(
    SOURCE_PATH "${SOURCE_PATH}"
    OPTIONS
        ${FEATURE_OPTIONS}
        -DBUILD_DOCS=OFF
        -DBUILD_PYTHON_BINDINGS=OFF
        -DBUILD_TESTING=OFF
        -DCMAKE_DISABLE_FIND_PACKAGE_CSharp=ON
        -DCMAKE_DISABLE_FIND_PACKAGE_Java=ON
        -DCMAKE_DISABLE_FIND_PACKAGE_JNI=ON
        -DCMAKE_DISABLE_FIND_PACKAGE_Perl=ON
        -DCMAKE_DISABLE_FIND_PACKAGE_SWIG=ON
        -DGDAL_USE_INTERNAL_LIBS=OFF
        -DGDAL_USE_EXTERNAL_LIBS=OFF
        -DGDAL_BUILD_OPTIONAL_DRIVERS=ON
        -DOGR_BUILD_OPTIONAL_DRIVERS=ON
        -DGDAL_CHECK_PACKAGE_NetCDF_NAMES=netCDF
        -DGDAL_CHECK_PACKAGE_NetCDF_TARGETS=netCDF::netcdf
        -DBUILD_APPS=OFF
    OPTIONS_RELEASE
        ${FEATURE_OPTIONS_RELEASE}
)

vcpkg_cmake_install()
vcpkg_copy_pdbs()
vcpkg_fixup_pkgconfig()
vcpkg_cmake_config_fixup(CONFIG_PATH lib/cmake/gdal)
vcpkg_replace_string("${CURRENT_PACKAGES_DIR}/share/gdal/GDALConfig.cmake"
    "include(CMakeFindDependencyMacro)"
    "include(CMakeFindDependencyMacro)
# gdal needs a pkg-config tool. A host dependency provides pkgconf.
get_filename_component(vcpkg_host_prefix \"\${CMAKE_CURRENT_LIST_DIR}/../../../${HOST_TRIPLET}\" ABSOLUTE)
list(APPEND CMAKE_PROGRAM_PATH \"\${vcpkg_host_prefix}/tools/pkgconf\")"
)

file(REMOVE_RECURSE
    "${CURRENT_PACKAGES_DIR}/debug/include"
    "${CURRENT_PACKAGES_DIR}/debug/share"
)
file(GLOB bin_files "${CURRENT_PACKAGES_DIR}/bin/*")
list(REMOVE_ITEM bin_files "${CURRENT_PACKAGES_DIR}/bin/gdal-config")
if(NOT bin_files)
    file(REMOVE_RECURSE
        "${CURRENT_PACKAGES_DIR}/bin"
        "${CURRENT_PACKAGES_DIR}/debug/bin"
    )
endif()

file(INSTALL "${CMAKE_CURRENT_LIST_DIR}/vcpkg-cmake-wrapper.cmake" DESTINATION "${CURRENT_PACKAGES_DIR}/share/${PORT}")
file(INSTALL "${CMAKE_CURRENT_LIST_DIR}/usage" DESTINATION "${CURRENT_PACKAGES_DIR}/share/${PORT}")
file(INSTALL "${SOURCE_PATH}/LICENSE.TXT" DESTINATION "${CURRENT_PACKAGES_DIR}/share/${PORT}" RENAME copyright)
