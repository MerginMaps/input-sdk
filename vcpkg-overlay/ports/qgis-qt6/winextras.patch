diff --git a/src/core/qgsapplication.cpp b/src/core/qgsapplication.cpp
index 1ed646c04e..0694c3c4e7 100644
--- a/src/core/qgsapplication.cpp
+++ b/src/core/qgsapplication.cpp
@@ -899,7 +899,11 @@ QString QgsApplication::resolvePkgPath()
       QgsDebugMsgLevel( QStringLiteral( "- source directory: %1" ).arg( sBuildSourcePath()->toUtf8().constData() ), 4 );
       QgsDebugMsgLevel( QStringLiteral( "- output directory of the build: %1" ).arg( sBuildOutputPath()->toUtf8().constData() ), 4 );
 #if defined(_MSC_VER) && !defined(USING_NMAKE) && !defined(USING_NINJA)
+#if QT_VERSION < QT_VERSION_CHECK(5, 15, 0)
       *sCfgIntDir() = prefix.split( '/', QString::SkipEmptyParts ).last();
+#else
+      *sCfgIntDir() = prefix.split( '/', Qt::SkipEmptyParts ).last();
+#endif
       qDebug( "- cfg: %s", sCfgIntDir()->toUtf8().constData() );
 #endif
     }
@@ -1236,9 +1240,14 @@ QString QgsApplication::userLoginName()
 
   if ( GetUserName( ( TCHAR * )name, &size ) )
   {
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
     *sUserName() = QString::fromLocal8Bit( name );
+#else
+    *sUserName() = QString::fromWCharArray( name );
+#endif
   }
 
+
 #elif QT_CONFIG(process)
   QProcess process;
 
@@ -1272,7 +1281,11 @@ QString QgsApplication::userFullName()
   //note - this only works for accounts connected to domain
   if ( GetUserNameEx( NameDisplay, ( TCHAR * )name, &size ) )
   {
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
     *sUserFullName() = QString::fromLocal8Bit( name );
+#else
+    *sUserFullName() = QString::fromWCharArray( name );
+#endif
   }
 
   //fall back to login name
diff --git a/src/native/CMakeLists.txt b/src/native/CMakeLists.txt
index ec85ecfb49..6e995500f9 100644
--- a/src/native/CMakeLists.txt
+++ b/src/native/CMakeLists.txt
@@ -63,7 +63,7 @@ if(APPLE)
   )
 endif()
 
-if(MSVC)
+if(MSVC AND NOT BUILD_WITH_QT6)
   set(QGIS_NATIVE_SRCS ${QGIS_NATIVE_SRCS}
     ../../external/wintoast/src/wintoastlib.cpp
     win/qgswinnative.cpp
@@ -96,7 +96,7 @@ target_include_directories(qgis_native PUBLIC
   ${CMAKE_CURRENT_BINARY_DIR}
 )
 
-if(MSVC)
+if(MSVC AND NOT BUILD_WITH_QT6)
   target_include_directories(qgis_native SYSTEM PUBLIC
       ../../external/wintoast/src
   )
@@ -144,12 +144,13 @@ if (UNIX AND NOT APPLE AND NOT ANDROID)
   target_link_libraries(qgis_native ${QT_VERSION_BASE}::DBus)
 endif()
 
-if (MSVC)
+if (MSVC AND NOT BUILD_WITH_QT6)
   find_package(${QT_VERSION_BASE}WinExtras)
 
   target_link_libraries(qgis_native shell32)
   target_link_libraries(qgis_native ${QT_VERSION_BASE}::Widgets ${QT_QTMAIN_LIBRARY})
   target_link_libraries(qgis_native ${QT_VERSION_BASE}::WinExtras)
+
 endif()
 # install
 
diff --git a/src/providers/delimitedtext/qgsdelimitedtextfile.cpp b/src/providers/delimitedtext/qgsdelimitedtextfile.cpp
index aa7e97f595..82e536373e 100644
--- a/src/providers/delimitedtext/qgsdelimitedtextfile.cpp
+++ b/src/providers/delimitedtext/qgsdelimitedtextfile.cpp
@@ -89,7 +89,7 @@ bool QgsDelimitedTextFile::open()
     }
     if ( mFile )
     {
-      mCodec = QTextCodec::codecForName( !mEncoding.isEmpty() ? mEncoding.toLatin1() : "UTF-8" );
+      mCodec = QTextCodec::codecForName( !mEncoding.isEmpty() ? mEncoding.toLatin1() : QByteArray( "UTF-8" ) );
       if ( ! mCodec )
       {
         QgsDebugMsgLevel( QStringLiteral( "Wrong codec '%1' for %2, falling back to locale default." ).arg( mEncoding, mFileName ), 2 );
